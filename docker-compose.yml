version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: news-portal-app:1.0
    container_name: news_portal_app
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html:cached
      - ./vendor:/var/www/html/vendor
      - ./storage:/var/www/html/storage
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - news_network

  nginx:
    image: nginx:1.25.2
    container_name: news_portal_nginx
    ports:
      - "${WEB_PORT:-8080}:80"
    volumes:
      - ./:/var/www/html:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - app
    networks:
      - news_network

  db:
    image: mysql:8.0.34
    container_name: news_portal_db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    ports:
      - "${FORWARD_DB_PORT:-3306}:3306"
    networks:
      - news_network

  test_db:
    image: mysql:8.0.34
    container_name: news_portal_test_db
    restart: "no"
    environment:
      MYSQL_DATABASE: ${MYSQL_TEST_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - test_db_data:/var/lib/mysql
    ports:
      - "${FORWARD_TEST_DB_PORT:-3307}:3306"
    networks:
      - news_network

  redis:
    image: redis:7.2.0-alpine
    container_name: news_portal_redis
    ports:
      - "${FORWARD_REDIS_PORT:-6379}:6379"
    networks:
      - news_network

volumes:
  db_data:
  test_db_data:

networks:
  news_network:
    driver: bridge
